<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [debug\gpio_led_output.out]</title></head>
<body><HR>
<H1>Static Call Graph for image debug\gpio_led_output.out</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Tue Dec 19 18:49:56 2023
<BR><P>
<H3>Maximum Stack Usage =        428 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; BOARD_BootClockRUN &rArr; CLOCK_BootToPeeMode &rArr; CLOCK_SetPbeMode &rArr; CLOCK_EnablePll0 &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; StrFormatPrintf &rArr; ConvertRadixNumToString &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[5]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">SysTick_Handler</a><BR>
 <LI><a href="#[51]">LOG_Push</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[48]">__aeabi_assert</a><BR>
 <LI><a href="#[57]">LPSCI_WriteBlocking</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[48]">__aeabi_assert</a><BR>
 <LI><a href="#[58]">LPSCI_ReadBlocking</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[48]">__aeabi_assert</a><BR>
 <LI><a href="#[56]">UART_ReadBlocking</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[48]">__aeabi_assert</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[15]">ADC0_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[16]">CMP0_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[1f]">DAC0_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[29]">DMA0_DriverIRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(.text)
 <LI><a href="#[6]">DMA0_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[2a]">DMA1_DriverIRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(.text)
 <LI><a href="#[7]">DMA1_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[2b]">DMA2_DriverIRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(.text)
 <LI><a href="#[8]">DMA2_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[2c]">DMA3_DriverIRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(.text)
 <LI><a href="#[9]">DMA3_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[36]">DbgConsole_RelocateLog</a> from fsl_debug_console.o(i.DbgConsole_RelocateLog) referenced from fsl_debug_console.o(i.DbgConsole_Printf)
 <LI><a href="#[35]">DefaultISR</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(.text)
 <LI><a href="#[b]">FTFA_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[2d]">I2C0_DriverIRQHandler</a> from fsl_i2c.o(i.I2C0_DriverIRQHandler) referenced from startup_mkl46z4.o(.text)
 <LI><a href="#[e]">I2C0_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[2e]">I2C1_DriverIRQHandler</a> from fsl_i2c.o(i.I2C1_DriverIRQHandler) referenced from startup_mkl46z4.o(.text)
 <LI><a href="#[f]">I2C1_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[34]">I2S0_DriverIRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(.text)
 <LI><a href="#[1d]">I2S0_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[23]">LCD_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[d]">LLWU_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[22]">LPTMR0_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[c]">LVD_LVW_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[21]">MCG_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[1c]">PIT_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[24]">PORTA_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[25]">PORTC_PORTD_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[1a]">RTC_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[1b]">RTC_Seconds_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[a]">Reserved20_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[2f]">SPI0_DriverIRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(.text)
 <LI><a href="#[10]">SPI0_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[30]">SPI1_DriverIRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(.text)
 <LI><a href="#[11]">SPI1_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[27]">SystemInit</a> from system_mkl46z4.o(i.SystemInit) referenced from startup_mkl46z4.o(.text)
 <LI><a href="#[17]">TPM0_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[18]">TPM1_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[19]">TPM2_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[20]">TSI0_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[31]">UART0_DriverIRQHandler</a> from fsl_lpsci.o(i.UART0_DriverIRQHandler) referenced from startup_mkl46z4.o(.text)
 <LI><a href="#[12]">UART0_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[32]">UART1_DriverIRQHandler</a> from fsl_uart.o(i.UART1_DriverIRQHandler) referenced from startup_mkl46z4.o(.text)
 <LI><a href="#[13]">UART1_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[33]">UART2_DriverIRQHandler</a> from fsl_uart.o(i.UART2_DriverIRQHandler) referenced from startup_mkl46z4.o(.text)
 <LI><a href="#[14]">UART2_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[1e]">USB0_IRQHandler</a> from startup_mkl46z4.o(.text) referenced from startup_mkl46z4.o(RESET)
 <LI><a href="#[28]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_mkl46z4.o(.text)
 <LI><a href="#[26]">main</a> from gpio_led_output.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[28]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(.text)
</UL>
<P><STRONG><a name="[60]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry4.o(.ARM.Collect$$$$00000003))

<P><STRONG><a name="[37]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[3e]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[61]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[62]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[63]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[64]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[65]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>DMA0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DMA1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>DMA2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>DMA3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>I2C0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>I2C1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>SPI0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>SPI1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>UART0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>UART1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>UART2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>I2S0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>ADC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>CMP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>DAC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>DMA0_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(.text)
</UL>
<P><STRONG><a name="[2a]"></a>DMA1_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(.text)
</UL>
<P><STRONG><a name="[2b]"></a>DMA2_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(.text)
</UL>
<P><STRONG><a name="[2c]"></a>DMA3_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(.text)
</UL>
<P><STRONG><a name="[35]"></a>DefaultISR</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(.text)
</UL>
<P><STRONG><a name="[b]"></a>FTFA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>I2S0_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(.text)
</UL>
<P><STRONG><a name="[23]"></a>LCD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>LLWU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>LPTMR0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>LVD_LVW_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>MCG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>PIT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>PORTA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>PORTC_PORTD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>RTC_Seconds_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>Reserved20_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>SPI0_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(.text)
</UL>
<P><STRONG><a name="[30]"></a>SPI1_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(.text)
</UL>
<P><STRONG><a name="[17]"></a>TPM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TPM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TPM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>TSI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>USB0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl46z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[3a]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertRadixNumToString
</UL>

<P><STRONG><a name="[67]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[39]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertRadixNumToString
</UL>

<P><STRONG><a name="[3c]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[68]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[69]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[3b]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[4f]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Printf
</UL>

<P><STRONG><a name="[6a]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[3d]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[5c]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrFormatPrintf
</UL>

<P><STRONG><a name="[38]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[6b]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[3f]"></a>BOARD_BootClockRUN</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, clock_config.o(i.BOARD_BootClockRUN))
<BR><BR>[Stack]<UL><LI>Max Depth = 420<LI>Call Chain = BOARD_BootClockRUN &rArr; CLOCK_BootToPeeMode &rArr; CLOCK_SetPbeMode &rArr; CLOCK_EnablePll0 &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; StrFormatPrintf &rArr; ConvertRadixNumToString &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SetSimConfig
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SetInternalRefClkConfig
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_InitOsc0
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_BootToPeeMode
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_CONFIG_SetFllExtRefDiv
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[45]"></a>BOARD_InitPins</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, pin_mux.o(i.BOARD_InitPins))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = BOARD_InitPins &rArr; PORT_SetPinMux
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_SetPinMux
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[42]"></a>CLOCK_BootToPeeMode</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, fsl_clock.o(i.CLOCK_BootToPeeMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 412<LI>Call Chain = CLOCK_BootToPeeMode &rArr; CLOCK_SetPbeMode &rArr; CLOCK_EnablePll0 &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; StrFormatPrintf &rArr; ConvertRadixNumToString &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SetPbeMode
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SetExternalRefClkConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockRUN
</UL>

<P><STRONG><a name="[4b]"></a>CLOCK_EnablePll0</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, fsl_clock.o(i.CLOCK_EnablePll0))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = CLOCK_EnablePll0 &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; StrFormatPrintf &rArr; ConvertRadixNumToString &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SetPbeMode
</UL>

<P><STRONG><a name="[40]"></a>CLOCK_InitOsc0</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, fsl_clock.o(i.CLOCK_InitOsc0))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CLOCK_InitOsc0
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetOscRangeFromFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockRUN
</UL>

<P><STRONG><a name="[49]"></a>CLOCK_SetExternalRefClkConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fsl_clock.o(i.CLOCK_SetExternalRefClkConfig))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_BootToPeeMode
</UL>

<P><STRONG><a name="[43]"></a>CLOCK_SetInternalRefClkConfig</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, fsl_clock.o(i.CLOCK_SetInternalRefClkConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CLOCK_SetInternalRefClkConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockRUN
</UL>

<P><STRONG><a name="[4a]"></a>CLOCK_SetPbeMode</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, fsl_clock.o(i.CLOCK_SetPbeMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 396<LI>Call Chain = CLOCK_SetPbeMode &rArr; CLOCK_EnablePll0 &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; StrFormatPrintf &rArr; ConvertRadixNumToString &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_EnablePll0
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_BootToPeeMode
</UL>

<P><STRONG><a name="[44]"></a>CLOCK_SetSimConfig</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, fsl_clock.o(i.CLOCK_SetSimConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CLOCK_SetSimConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockRUN
</UL>

<P><STRONG><a name="[4e]"></a>DbgConsole_Printf</STRONG> (Thumb, 62 bytes, Stack size 160 bytes, fsl_debug_console.o(i.DbgConsole_Printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = DbgConsole_Printf &rArr; StrFormatPrintf &rArr; ConvertRadixNumToString &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrFormatPrintf
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOG_Push
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[52]"></a>GPIO_PinInit</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, fsl_gpio.o(i.GPIO_PinInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 388<LI>Call Chain = GPIO_PinInit &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; StrFormatPrintf &rArr; ConvertRadixNumToString &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2d]"></a>I2C0_DriverIRQHandler</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, fsl_i2c.o(i.I2C0_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2C0_DriverIRQHandler &rArr; I2C_TransferCommonIRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferCommonIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(.text)
</UL>
<P><STRONG><a name="[2e]"></a>I2C1_DriverIRQHandler</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, fsl_i2c.o(i.I2C1_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2C1_DriverIRQHandler &rArr; I2C_TransferCommonIRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferCommonIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(.text)
</UL>
<P><STRONG><a name="[54]"></a>IO_Transfer</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, fsl_io.o(i.IO_Transfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = IO_Transfer &rArr; LPSCI_ReadBlocking &rArr;  __aeabi_assert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSCI_WriteBlocking
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSCI_ReadBlocking
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WriteBlocking
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReadBlocking
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOG_Pop
</UL>

<P><STRONG><a name="[59]"></a>LOG_Pop</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, fsl_log.o(i.LOG_Pop))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = LOG_Pop &rArr; IO_Transfer &rArr; LPSCI_ReadBlocking &rArr;  __aeabi_assert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_Transfer
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOG_Push
</UL>

<P><STRONG><a name="[51]"></a>LOG_Push</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, fsl_log.o(i.LOG_Push))
<BR><BR>[Stack]<UL><LI>Max Depth = 92 + In Cycle
<LI>Call Chain = LOG_Push &rArr;  __aeabi_assert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOG_Pop
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Printf
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_RelocateLog
</UL>

<P><STRONG><a name="[5b]"></a>LPSCI_ClearStatusFlags</STRONG> (Thumb, 92 bytes, Stack size 12 bytes, fsl_lpsci.o(i.LPSCI_ClearStatusFlags))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LPSCI_ClearStatusFlags
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSCI_ReadBlocking
</UL>

<P><STRONG><a name="[5a]"></a>LPSCI_GetStatusFlags</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, fsl_lpsci.o(i.LPSCI_GetStatusFlags))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSCI_ReadBlocking
</UL>

<P><STRONG><a name="[58]"></a>LPSCI_ReadBlocking</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, fsl_lpsci.o(i.LPSCI_ReadBlocking))
<BR><BR>[Stack]<UL><LI>Max Depth = 36 + In Cycle
<LI>Call Chain = LPSCI_ReadBlocking &rArr;  __aeabi_assert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSCI_GetStatusFlags
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSCI_ClearStatusFlags
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_Transfer
</UL>

<P><STRONG><a name="[57]"></a>LPSCI_WriteBlocking</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, fsl_lpsci.o(i.LPSCI_WriteBlocking))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = LPSCI_WriteBlocking &rArr;  __aeabi_assert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_Transfer
</UL>

<P><STRONG><a name="[50]"></a>StrFormatPrintf</STRONG> (Thumb, 562 bytes, Stack size 120 bytes, fsl_str.o(i.StrFormatPrintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = StrFormatPrintf &rArr; ConvertRadixNumToString &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertRadixNumToString
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Printf
</UL>

<P><STRONG><a name="[27]"></a>SystemInit</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, system_mkl46z4.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemInit
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInitHook
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(.text)
</UL>
<P><STRONG><a name="[5d]"></a>SystemInitHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_mkl46z4.o(i.SystemInitHook))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[31]"></a>UART0_DriverIRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, fsl_lpsci.o(i.UART0_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART0_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(.text)
</UL>
<P><STRONG><a name="[32]"></a>UART1_DriverIRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, fsl_uart.o(i.UART1_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART1_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(.text)
</UL>
<P><STRONG><a name="[33]"></a>UART2_DriverIRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, fsl_uart.o(i.UART2_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART2_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl46z4.o(.text)
</UL>
<P><STRONG><a name="[5e]"></a>UART_GetStatusFlags</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, fsl_uart.o(i.UART_GetStatusFlags))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReadBlocking
</UL>

<P><STRONG><a name="[56]"></a>UART_ReadBlocking</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, fsl_uart.o(i.UART_ReadBlocking))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + In Cycle
<LI>Call Chain = UART_ReadBlocking &rArr;  __aeabi_assert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_GetStatusFlags
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_Transfer
</UL>

<P><STRONG><a name="[55]"></a>UART_WriteBlocking</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, fsl_uart.o(i.UART_WriteBlocking))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_WriteBlocking
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_Transfer
</UL>

<P><STRONG><a name="[48]"></a>__aeabi_assert</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, fsl_assert.o(i.__aeabi_assert))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = __aeabi_assert &rArr; DbgConsole_Printf &rArr; StrFormatPrintf &rArr; ConvertRadixNumToString &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Printf
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SetPbeMode
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_EnablePll0
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_BootToPeeMode
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinInit
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSCI_WriteBlocking
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSCI_ReadBlocking
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOG_Push
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReadBlocking
</UL>

<P><STRONG><a name="[6c]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[6d]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[6e]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[5f]"></a>delay</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gpio_led_output.o(i.delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = delay
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[26]"></a>main</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, gpio_led_output.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 428<LI>Call Chain = main &rArr; BOARD_BootClockRUN &rArr; CLOCK_BootToPeeMode &rArr; CLOCK_SetPbeMode &rArr; CLOCK_EnablePll0 &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; StrFormatPrintf &rArr; ConvertRadixNumToString &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinInit
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Printf
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitPins
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockRUN
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[41]"></a>CLOCK_CONFIG_SetFllExtRefDiv</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, clock_config.o(i.CLOCK_CONFIG_SetFllExtRefDiv))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockRUN
</UL>

<P><STRONG><a name="[46]"></a>CLOCK_EnableClock</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, pin_mux.o(i.CLOCK_EnableClock))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitPins
</UL>

<P><STRONG><a name="[47]"></a>PORT_SetPinMux</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, pin_mux.o(i.PORT_SetPinMux))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = PORT_SetPinMux
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitPins
</UL>

<P><STRONG><a name="[4c]"></a>CLOCK_GetOscRangeFromFreq</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, fsl_clock.o(i.CLOCK_GetOscRangeFromFreq))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_InitOsc0
</UL>

<P><STRONG><a name="[53]"></a>I2C_TransferCommonIRQHandler</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, fsl_i2c.o(i.I2C_TransferCommonIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_TransferCommonIRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_DriverIRQHandler
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_DriverIRQHandler
</UL>

<P><STRONG><a name="[36]"></a>DbgConsole_RelocateLog</STRONG> (Thumb, 58 bytes, Stack size 40 bytes, fsl_debug_console.o(i.DbgConsole_RelocateLog))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = DbgConsole_RelocateLog &rArr; LOG_Push &rArr;  __aeabi_assert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOG_Push
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fsl_debug_console.o(i.DbgConsole_Printf)
</UL>
<P><STRONG><a name="[4d]"></a>ConvertRadixNumToString</STRONG> (Thumb, 196 bytes, Stack size 56 bytes, fsl_str.o(i.ConvertRadixNumToString))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = ConvertRadixNumToString &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrFormatPrintf
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
